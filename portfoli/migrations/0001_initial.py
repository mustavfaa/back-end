# Generated by Django 2.1.4 on 2018-12-13 03:30

from django.conf import settings
from django.db import migrations, models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import portfoli.models_core
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activate',
            fields=[
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('new_method', models.BooleanField(default=True)),
                ('sended', models.BooleanField(default=False)),
                ('subject', models.CharField(default='', max_length=4000)),
                ('html_content', models.CharField(default='', max_length=4000)),
                ('admin_banned', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdsAttestation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('date_begin', models.DateField(null=True)),
                ('date_end', models.DateField(null=True)),
                ('header', models.CharField(blank=True, max_length=255)),
                ('text', models.TextField(default='')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AlmaMater',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
                ('image', models.ImageField(default='nophoto.png', upload_to='usercontent/almamater')),
                ('short_code', models.CharField(blank=True, default='', max_length=255)),
                ('address', models.CharField(default='', max_length=255, null=True)),
                ('user_string', models.CharField(blank=True, default='', max_length=255)),
                ('phone_director', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('phone_user', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('nash', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AnaliticQuery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
                ('query_text', models.TextField(default='')),
                ('query_template', models.TextField(default='')),
                ('query_controller', models.TextField(default='')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApplicationAds',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('checked', models.BooleanField(default=False)),
                ('ignored', models.BooleanField(default=False)),
                ('ads_attestation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                                      to='portfoli.AdsAttestation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Attestation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('date', models.DateField(verbose_name='Attestation date')),
                ('image', models.ImageField(upload_to='usercontent/attestation', verbose_name='i18 the diploma')),
                ('image_getted', models.BooleanField(default=False)),
                ('certificate', models.CharField(default='', max_length=255, verbose_name='i18 certificate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlockHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChangeEmailTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('email', models.CharField(default='', max_length=255)),
                ('old_email', models.CharField(default='', max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ComputerSkills',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        # migrations.CreateModel(
        #     name='CourseCenter',
        #     fields=[
        #         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
        #         ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
        #         ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
        #         ('exchange', models.BooleanField(default=False)),
        #         ('name_ru', models.CharField(default='', max_length=500)),
        #         ('name_kk', models.CharField(blank=True, default='', max_length=500)),
        #         ('name_en', models.CharField(blank=True, default='', max_length=500)),
        #         ('sort', models.IntegerField(default=500)),
        #         ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
        #     ],
        #     options={
        #         'abstract': False,
        #     },
        # ),
        # migrations.CreateModel(
        #     name='CourseDestination',
        #     fields=[
        #         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
        #         ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
        #         ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
        #         ('exchange', models.BooleanField(default=False)),
        #         ('name_ru', models.CharField(default='', max_length=500)),
        #         ('name_kk', models.CharField(blank=True, default='', max_length=500)),
        #         ('name_en', models.CharField(blank=True, default='', max_length=500)),
        #         ('sort', models.IntegerField(default=500)),
        #         ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
        #     ],
        #     options={
        #         'abstract': False,
        #     },
        # ),
        # migrations.CreateModel(
        #     name='CourseLevel',
        #     fields=[
        #         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
        #         ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
        #         ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
        #         ('exchange', models.BooleanField(default=False)),
        #         ('name_ru', models.CharField(default='', max_length=500)),
        #         ('name_kk', models.CharField(blank=True, default='', max_length=500)),
        #         ('name_en', models.CharField(blank=True, default='', max_length=500)),
        #         ('sort', models.IntegerField(default=500)),
        #         ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
        #     ],
        #     options={
        #         'abstract': False,
        #     },
        # ),
        # migrations.CreateModel(
        #     name='CourseLevelled',
        #     fields=[
        #         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
        #         ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
        #         ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
        #         ('exchange', models.BooleanField(default=False)),
        #         ('name_ru', models.CharField(default='', max_length=500)),
        #         ('name_kk', models.CharField(blank=True, default='', max_length=500)),
        #         ('name_en', models.CharField(blank=True, default='', max_length=500)),
        #         ('sort', models.IntegerField(default=500)),
        #         ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
        #     ],
        #     options={
        #         'abstract': False,
        #     },
        # ),
        # migrations.CreateModel(
        #     name='CourseLevelledTIPO',
        #     fields=[
        #         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
        #         ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
        #         ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
        #         ('exchange', models.BooleanField(default=False)),
        #         ('name_ru', models.CharField(default='', max_length=500)),
        #         ('name_kk', models.CharField(blank=True, default='', max_length=500)),
        #         ('name_en', models.CharField(blank=True, default='', max_length=500)),
        #         ('sort', models.IntegerField(default=500)),
        #         ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
        #     ],
        #     options={
        #         'abstract': False,
        #     },
        # ),
        # migrations.CreateModel(
        #     name='CourseLevelTIPO',
        #     fields=[
        #         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
        #         ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
        #         ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
        #         ('exchange', models.BooleanField(default=False)),
        #         ('name_ru', models.CharField(default='', max_length=500)),
        #         ('name_kk', models.CharField(blank=True, default='', max_length=500)),
        #         ('name_en', models.CharField(blank=True, default='', max_length=500)),
        #         ('sort', models.IntegerField(default=500)),
        #         ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
        #     ],
        #     options={
        #         'abstract': False,
        #     },
        # ),
        # migrations.CreateModel(
        #     name='CourseOSODO',
        #     fields=[
        #         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
        #         ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
        #         ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
        #         ('exchange', models.BooleanField(default=False)),
        #         ('name_ru', models.CharField(default='', max_length=500)),
        #         ('name_kk', models.CharField(blank=True, default='', max_length=500)),
        #         ('name_en', models.CharField(blank=True, default='', max_length=500)),
        #         ('sort', models.IntegerField(default=500)),
        #         ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
        #     ],
        #     options={
        #         'abstract': False,
        #     },
        # ),
        # migrations.CreateModel(
        #     name='CourseOSOSO',
        #     fields=[
        #         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
        #         ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
        #         ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
        #         ('exchange', models.BooleanField(default=False)),
        #         ('name_ru', models.CharField(default='', max_length=500)),
        #         ('name_kk', models.CharField(blank=True, default='', max_length=500)),
        #         ('name_en', models.CharField(blank=True, default='', max_length=500)),
        #         ('sort', models.IntegerField(default=500)),
        #         ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
        #     ],
        #     options={
        #         'abstract': False,
        #     },
        # ),
        # migrations.CreateModel(
        #     name='CourseOSOTIPO',
        #     fields=[
        #         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
        #         ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
        #         ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
        #         ('exchange', models.BooleanField(default=False)),
        #         ('name_ru', models.CharField(default='', max_length=500)),
        #         ('name_kk', models.CharField(blank=True, default='', max_length=500)),
        #         ('name_en', models.CharField(blank=True, default='', max_length=500)),
        #         ('sort', models.IntegerField(default=500)),
        #         ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
        #     ],
        #     options={
        #         'abstract': False,
        #     },
        # ),
        # migrations.CreateModel(
        #     name='CourseShort',
        #     fields=[
        #         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
        #         ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
        #         ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
        #         ('exchange', models.BooleanField(default=False)),
        #         ('name_ru', models.CharField(default='', max_length=500)),
        #         ('name_kk', models.CharField(blank=True, default='', max_length=500)),
        #         ('name_en', models.CharField(blank=True, default='', max_length=500)),
        #         ('sort', models.IntegerField(default=500)),
        #         ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
        #     ],
        #     options={
        #         'abstract': False,
        #     },
        # ),
        migrations.CreateModel(
            name='CourseSubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseTheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        # migrations.CreateModel(
        #     name='CourseTrener',
        #     fields=[
        #         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
        #         ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
        #         ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
        #         ('exchange', models.BooleanField(default=False)),
        #         ('name_ru', models.CharField(default='', max_length=500)),
        #         ('name_kk', models.CharField(blank=True, default='', max_length=500)),
        #         ('name_en', models.CharField(blank=True, default='', max_length=500)),
        #         ('sort', models.IntegerField(default=500)),
        #         ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
        #     ],
        #     options={
        #         'abstract': False,
        #     },
        # ),
        migrations.CreateModel(
            name='CourseType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
                ('must_vid', models.BooleanField(default=False)),
                ('must_subject', models.BooleanField(default=False)), ('is_active', models.BooleanField(default=False)),
                ('must_level', models.BooleanField(default=False)), ('free', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseVid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
                ('course_type',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.CourseType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CurrentWorkTimeLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DateObjects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EducationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EnglishLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ErrorMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('error_message', models.TextField()),
                ('sended', models.BooleanField(default=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ForgetPasswordRec',
            fields=[
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL,
                                           verbose_name='user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Kandidat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('started', models.BooleanField(default=False)),
                ('closed', models.BooleanField(default=False)),
                ('finished', models.BooleanField(default=False)),
                ('date_begin', models.DateTimeField(blank=True, null=True)),
                ('date_end', models.DateTimeField(blank=True, null=True)),
                ('svid_num', models.CharField(blank=True, db_index=True, default='', max_length=6, null=True)),
                ('svid_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KandidatStatusHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('kandidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Kandidat')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KandidatVerdiktHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('kandidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Kandidat')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Klass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ListObservations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('date', models.DateField()),
                ('image_getted', models.BooleanField(default=False)),
                ('image',
                 models.ImageField(default='/static/images/nophoto.png', upload_to='usercontent/listobservation')),
                ('changer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                              to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('text', models.TextField(default='')),
                ('text_short', models.TextField(default='')),
                ('meta_keywords', models.CharField(blank=True, default='', max_length=200)),
                ('meta_description', models.TextField(blank=True, max_length=250)),
                ('school',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.AlmaMater')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('text', models.TextField(default='')),
                ('ocenka_type', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PhoneActivate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('code', models.CharField(max_length=6)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
                ('blocked', models.BooleanField(default=False)),
                ('checked', models.BooleanField(default=False)),
                ('application', models.BooleanField(default=False)),
                ('phone_checked', models.BooleanField(default=False)),
                ('email_checked', models.BooleanField(default=False)),
                ('last_name', models.CharField(default='', max_length=255, verbose_name='LastName')),
                ('first_name', models.CharField(default='', max_length=255)),
                ('patronymic_name', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('view_in_dat_pad', models.CharField(default='', max_length=500, null=True)),
                ('view_in_dat_pad_kaz', models.CharField(default='', max_length=500, null=True)),
                ('iin', models.CharField(default='', max_length=255)),
                ('avatar', models.ImageField(blank=True, default='nophoto.png', null=True, upload_to='usercontent/')),
                ('image_getted', models.BooleanField(default=False)),
                ('birthday', models.DateField()),
                ('email', models.EmailField(max_length=254)),
                ('main_expert', models.BooleanField(default=False)),
                ('phone', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('uo_admin', models.BooleanField(default=False)),
                ('uo_operator', models.BooleanField(default=False)),
                ('in_dekret', models.BooleanField(default=False)),
                ('date_dekret', models.DateField(blank=True, null=True, verbose_name='date_end')),
                ('ped_stazh', models.FloatField(default=0)),
                ('category_year', models.DateField(blank=True, null=True)),
                ('languages', models.TextField(blank=True, default='', null=True)),
                ('specialities', models.TextField(blank=True, default='', null=True)),
                ('reindexed', models.BooleanField(default=False)),
                ('reindexed_wtl', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PortfolioBonus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('date', models.DateField(verbose_name='Date_bonus')),
                ('image', models.ImageField(upload_to='usercontent/bonus', verbose_name='i18 the diploma')),
                ('image_getted', models.BooleanField(default=False)),
                ('changer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                              to=settings.AUTH_USER_MODEL)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PortfolioBonusStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('date', models.DateField(verbose_name='Date_bonus')),
                ('image', models.ImageField(upload_to='usercontent/bonus', verbose_name='i18 the diploma')),
                ('image_getted', models.BooleanField(default=False)),
                ('changer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                              to=settings.AUTH_USER_MODEL)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
            ],
            options={
                'abstract': False,
            },
        ),

        migrations.CreateModel(
            name='PortfolioEducation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('date_begin', models.DateField(verbose_name='date_begin')),
                ('date_end', models.DateField(verbose_name='date_end')),
                ('image', models.ImageField(upload_to='usercontent/education', verbose_name='i18 the diploma')),
                ('image_getted', models.BooleanField(default=False)),
                ('alma_mater',
                 models.CharField(default='', max_length=1000, verbose_name='i18 educational institution')),
                ('quality_on_diplom', models.CharField(default='', max_length=1000, verbose_name='Quality on diploma')),
                ('speciality_handmade', models.CharField(default='', max_length=1000, verbose_name='i18 specialty')),
                ('alma_mater_ref', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                                     to='portfoli.AlmaMater')),
                ('changer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                              to=settings.AUTH_USER_MODEL)),
                ('degree',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Degree',
                                   verbose_name='i18 scientific degree')),
                ('education_type',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.EducationType',
                                   verbose_name='Education type')),
                ('language', models.ManyToManyField(to='portfoli.Language', verbose_name='education language')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PortfolioListOfView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('date', models.DateField(verbose_name='Date')),
                ('image', models.ImageField(upload_to='usercontent/listobservation', verbose_name='Scan view')),
                ('image_getted', models.BooleanField(default=False)),
                ('changer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                              to=settings.AUTH_USER_MODEL)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
                ('school',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.AlmaMater',
                                   verbose_name='School of lesson')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PortfolioStatement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('fio', models.CharField(default='', max_length=1000, null=True, verbose_name='Full name')),
                ('date_end', models.DateField(null=True, verbose_name='Date')),
                ('view_in_dat_pad',
                 models.CharField(default='', max_length=500, null=True, verbose_name='View in dat pad')),
                ('view_in_dat_pad_kaz',
                 models.CharField(default='', max_length=500, null=True, verbose_name='View in dat pad kaz')),
                ('checked', models.BooleanField(default=False)),
                ('not_checked', models.BooleanField(default=False)),
                ('in_protocol', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PortfolioWorkTimeLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('date_begin', models.DateField(verbose_name='date_begin')),
                ('date_end', models.DateField(blank=True, null=True, verbose_name='date_end')),
                ('current', models.BooleanField(default=False)),
                ('checked', models.BooleanField(default=False)),
                ('not_checked', models.BooleanField(default=False)),
                ('uvolen', models.BooleanField(default=False)),
                ('admin_editted', models.BooleanField(default=False)),
                ('day_delta', models.IntegerField(blank=True, default=0, null=True)),
                ('changer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                              to=settings.AUTH_USER_MODEL)),
                ('education', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                                to='portfoli.PortfolioEducation', verbose_name='Education to work')),
                ('language', models.ManyToManyField(to='portfoli.Language', verbose_name='language')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PortfolioWorkTimeLineUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('date_begin', models.DateField(verbose_name='date_begin')),
                ('date_end', models.DateField(blank=True, null=True, verbose_name='date_end')),
                ('current', models.BooleanField(default=False)),
                ('education', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                                to='portfoli.PortfolioEducation', verbose_name='i18 education')),
                ('language', models.ManyToManyField(to='portfoli.Language', verbose_name='language')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Protocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('file', models.FileField(upload_to='')),
                ('kandidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Kandidat')),
                ('tester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Quality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RegistrationProcess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('email_sended', models.BooleanField(default=False)),
                ('email_checked', models.BooleanField(default=False)),
                ('last_try', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Scale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SchoolBonus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('date', models.DateField()),
                ('image_getted', models.BooleanField(default=False)),
                ('image', models.ImageField(default='/static/images/nophoto.png', upload_to='usercontent/bonus')),
                ('achievements', models.TextField(default='')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
                ('school',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.AlmaMater')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SchoolType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
                ('show_at_site', models.BooleanField(default=False)),
                ('edu_type',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.EducationType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SchoolTypeGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SendedCerts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StatementProtocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('checked', models.BooleanField(default=False)),
                ('not_checked', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StatementProtocolRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('protocol',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.StatementProtocol')),
                ('statement',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.PortfolioStatement')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudenTtable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('persent', models.TextField(default='')),
                ('persent_float', models.FloatField(default=0)),
                ('date_objects',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.DateObjects')),
                ('klass',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Klass')),
                ('language_objects',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Language')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentTypeOfAchievement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeacherAttestation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
                ('svid_date', models.DateField(null=True, verbose_name='Svid publication date')),
                ('finished', models.BooleanField(default=False)),
                ('main_text_kaz', models.TextField(default='', verbose_name='Main text kaz')),
                ('main_text_rus', models.TextField(default='', verbose_name='Main text rus')),
                ('predsedatel', models.CharField(default='', max_length=500, null=True, verbose_name='Predsedatel')),
                ('sekretar', models.CharField(default='', max_length=500, null=True, verbose_name='Sekretar')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeacherAttestationUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('date_end', models.DateField(null=True, verbose_name='date_end')),
                ('attestation',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.TeacherAttestation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeacherAttestationUserHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('operation', models.CharField(db_index=True, default='', max_length=10)),
                ('attestation',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.TeacherAttestation')),
                ('portfolio_expert',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   to='portfoli.Portfolio')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeacherCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeacherScale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
                ('val', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeacherScaleSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('destination', models.CharField(
                    choices=[('PortfolioListOfView', 'PortfolioListOfView'), ('PortfolioBonus', 'PortfolioBonus'),
                             ('PortfolioBonusStudent', 'PortfolioBonusStudent'), ('Upwork', 'Upwork'),
                             ('StudentTable', 'StudentTable')], db_index=True, default='', max_length=100)),
                ('scale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.TeacherScale')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeacherStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TelegramMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('text', models.CharField(default='', max_length=1000)),
                ('sended', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestAvatar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('avatar', models.ImageField(blank=True, default='/static/images/nophoto.png', null=True,
                                             upload_to='usercontent/avatar')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL,
                                           verbose_name='user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Testing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('started', models.BooleanField(default=False)),
                ('finished', models.BooleanField(default=False)),
                ('date_begin', models.DateTimeField(blank=True, null=True)),
                ('date_end', models.DateTimeField(blank=True, null=True)),
                ('attestation',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.TeacherAttestation')),
                ('kandidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Kandidat')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.TeacherStatus')),
                ('tester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestingNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('ocenka_type', models.IntegerField(blank=True, null=True)),
                ('kandidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Kandidat')),
                ('ocenka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to='portfoli.TeacherScale')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Note')),
                ('tester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestingPortfolioBonus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('kandidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Kandidat')),
                ('ocenka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to='portfoli.TeacherScale')),
                (
                    'target',
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.PortfolioBonus')),
                ('tester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestingPortfolioBonusStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('kandidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Kandidat')),
                ('ocenka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to='portfoli.TeacherScale')),
                ('target',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.PortfolioBonusStudent')),
                ('tester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestingPortfolioListOfView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('kandidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Kandidat')),
                ('ocenka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to='portfoli.TeacherScale')),
                ('target',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.PortfolioListOfView')),
                ('tester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestingStudentTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('kandidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Kandidat')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Language')),
                ('ocenka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to='portfoli.TeacherScale')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Subject')),
                ('tester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestingUpwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('kandidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Kandidat')),
                ('ocenka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to='portfoli.TeacherScale')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestSchool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('image', models.ImageField(default='/static/images/nophoto.png', upload_to='usercontent/almamater')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL,
                                           verbose_name='user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TypeOfAchievement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Upwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('date_begin', models.DateField(verbose_name='date_begin')),
                ('course_theme_str',
                 models.CharField(default='', max_length=500, null=True, verbose_name='Course theme')),
                (
                    'country',
                    models.CharField(blank=True, default='', max_length=500, null=True, verbose_name='Country')),
                ('city', models.CharField(blank=True, default='', max_length=500, null=True, verbose_name='City')),
                ('date_end', models.DateField(verbose_name='date_end')),
                ('image', models.ImageField(upload_to='usercontent/upwork', verbose_name='i18 the diploma')),
                ('hours', models.IntegerField(blank=True, default=0, verbose_name='Hours')),
                ('image_getted', models.BooleanField(default=False)),
                ('changer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                              to=settings.AUTH_USER_MODEL)),
                ('course_subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                                     to='portfoli.CourseSubject', verbose_name='Course subject')),
                ('course_theme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                                   to='portfoli.CourseTheme', verbose_name='Course theme')),
                ('course_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                                  to='portfoli.CourseType', verbose_name='Course type')),
                ('course_vid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                                 to='portfoli.CourseVid', verbose_name='Course character')),
                ('englishlevel',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.EnglishLevel',
                                   verbose_name='i18 englishlevel')),
                ('language',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Language',
                                   verbose_name='education language')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
                ('positions',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Position',
                                   verbose_name='i18 positions')),
                ('scale', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                            to='portfoli.Scale', verbose_name='i18 Level')),
                ('school',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.AlmaMater',
                                   verbose_name='Course place')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Verdikt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='testingupwork',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Upwork'),
        ),
        migrations.AddField(
            model_name='testingupwork',
            name='tester',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='teacherscalesettings',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.TeacherStatus'),
        ),
        migrations.AddField(
            model_name='teacherattestationuser',
            name='category',
            field=models.ManyToManyField(blank=True, to='portfoli.TeacherCategory'),
        ),
        migrations.AddField(
            model_name='teacherattestationuser',
            name='portfolio_expert',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='teacherattestationuser',
            name='position',
            field=models.ManyToManyField(blank=True, to='portfoli.Position'),
        ),
        migrations.AddField(
            model_name='teacherattestationuser',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='studenttable',
            name='ocenka',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.TeacherScale'),
        ),
        migrations.AddField(
            model_name='studenttable',
            name='portfolio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='studenttable',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Subject'),
        ),
        migrations.AddField(
            model_name='studenttable',
            name='tester',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='statementprotocol',
            name='attestation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.TeacherAttestation',
                                    verbose_name='Attestation'),
        ),
        migrations.AddField(
            model_name='statementprotocol',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='statementprotocol',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.AlmaMater'),
        ),
        migrations.AddField(
            model_name='schooltype',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.SchoolTypeGroup'),
        ),
        migrations.AddField(
            model_name='portfolioworktimelineuser',
            name='positions',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Position',
                                    verbose_name='positions'),
        ),
        migrations.AddField(
            model_name='portfolioworktimelineuser',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.AlmaMater',
                                    verbose_name='school'),
        ),
        migrations.AddField(
            model_name='portfolioworktimeline',
            name='positions',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Position',
                                    verbose_name='positions'),
        ),
        migrations.AddField(
            model_name='portfolioworktimeline',
            name='school',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.AlmaMater', verbose_name='Work place'),
        ),
        migrations.AddField(
            model_name='portfolioworktimeline',
            name='slave',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.WorkType',
                                    verbose_name='Type of position'),
        ),
        migrations.AddField(
            model_name='portfoliostatement',
            name='attestation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.TeacherAttestation',
                                    verbose_name='Attestation'),
        ),
        migrations.AddField(
            model_name='portfoliostatement',
            name='portfolio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='portfoliostatement',
            name='positions',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Position',
                                    verbose_name='positions'),
        ),
        migrations.AddField(
            model_name='portfoliostatement',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.AlmaMater',
                                    verbose_name='Work place'),
        ),
        migrations.AddField(
            model_name='portfoliostatement',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.TeacherStatus', verbose_name='Qual-test result'),
        ),
        migrations.AddField(
            model_name='portfoliolistofview',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Subject',
                                    verbose_name='i18 subject'),
        ),
        migrations.AddField(
            model_name='portfolioeducation',
            name='quality',
            field=models.ManyToManyField(to='portfoli.Quality', verbose_name='i18 quality'),
        ),
        migrations.AddField(
            model_name='portfolioeducation',
            name='speciality',
            field=models.ManyToManyField(to='portfoli.Speciality', verbose_name='select one or many'),
        ),
        migrations.AddField(
            model_name='portfoliobonusstudent',
            name='scale',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Scale',
                                    verbose_name='i18 Level'),
        ),
        migrations.AddField(
            model_name='portfoliobonusstudent',
            name='student_type_achievement',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.StudentTypeOfAchievement', verbose_name='i18 type_of_achievement'),
        ),
        migrations.AddField(
            model_name='portfoliobonus',
            name='scale',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Scale',
                                    verbose_name='i18 Level'),
        ),
        migrations.AddField(
            model_name='portfoliobonus',
            name='type_of_achievement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.TypeOfAchievement',
                                    verbose_name='i18 type_of_achievement'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='access_by_group',
            field=models.ManyToManyField(blank=True, to='portfoli.SchoolTypeGroup'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='access_by_school_type',
            field=models.ManyToManyField(blank=True, to='portfoli.SchoolType'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='computer_skills',
            field=models.ManyToManyField(blank=True, to='portfoli.ComputerSkills'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='current_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.TeacherCategory'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='english_level',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.EnglishLevel'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='moderator',
            field=models.ManyToManyField(blank=True, to='portfoli.Position'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='sex',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Sex'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='note',
            name='ocenka',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.TeacherScale'),
        ),
        migrations.AddField(
            model_name='note',
            name='portfolio',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='note',
            name='tester',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='news',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='listobservations',
            name='portfolio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='listobservations',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.AlmaMater'),
        ),
        migrations.AddField(
            model_name='listobservations',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Subject'),
        ),
        migrations.AddField(
            model_name='kandidatverdikthistory',
            name='verdikt',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Verdikt'),
        ),
        migrations.AddField(
            model_name='kandidatverdikthistory',
            name='who',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='kandidatstatushistory',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.TeacherStatus'),
        ),
        migrations.AddField(
            model_name='kandidatstatushistory',
            name='who',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='kandidat',
            name='attestation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.TeacherAttestation'),
        ),
        migrations.AddField(
            model_name='kandidat',
            name='portfolio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='kandidat',
            name='position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Position'),
        ),
        migrations.AddField(
            model_name='kandidat',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.AlmaMater'),
        ),
        migrations.AddField(
            model_name='kandidat',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.TeacherStatus'),
        ),
        migrations.AddField(
            model_name='kandidat',
            name='tester',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='kandidat',
            name='verdikt',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.Verdikt'),
        ),
        migrations.AddField(
            model_name='errormessage',
            name='portfolio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='currentworktimeline',
            name='portfolio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='currentworktimeline',
            name='wtl',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.PortfolioWorkTimeLine'),
        ),
        migrations.AddField(
            model_name='coursesubject',
            name='course_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.CourseType'),
        ),
        migrations.AddField(
            model_name='coursesubject',
            name='course_vid',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.CourseVid'),
        ),
        migrations.AddField(
            model_name='changeemailtask',
            name='portfolio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='changeemailtask',
            name='who',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='blockhistory',
            name='portfolio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='blockhistory',
            name='who',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='attestation',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.TeacherCategory',
                                    verbose_name='i18 category'),
        ),
        migrations.AddField(
            model_name='attestation',
            name='changer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='attestation',
            name='portfolio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='attestation',
            name='positions',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Position',
                                    verbose_name='i18 positions'),
        ),
        migrations.AddField(
            model_name='attestation',
            name='school',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.AlmaMater', verbose_name='i18 advanced studies'),
        ),
        migrations.AddField(
            model_name='applicationads',
            name='portfolio',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='almamater',
            name='author',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='almamater',
            name='director',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='almamater',
            name='place',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Place'),
        ),
        migrations.AddField(
            model_name='almamater',
            name='school_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.SchoolType'),
        ),
        migrations.AddField(
            model_name='almamater',
            name='user',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='adsattestation',
            name='institute',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.AlmaMater'),
        ),
        migrations.AddField(
            model_name='adsattestation',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio'),
        ),

        migrations.CreateModel(
            name='CategoryToCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.TeacherStatus')),
                ('old', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.TeacherCategory')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
                ('kod', models.CharField(default='', max_length=3)),
                ('abc2', models.CharField(default='', max_length=3)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseStatement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('checked', models.BooleanField(default=False)),
                ('zavuch_checked', models.BooleanField(default=False)),
                ('banned', models.BooleanField(default=False)),
                ('priority', models.FloatField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CPK',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='GosCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
                ('date_begin', models.DateField(verbose_name='Дата начала')),
                ('date_end', models.DateField(verbose_name='Дата окончания')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активен')),
                ('description', models.CharField(default='', max_length=500, verbose_name='Описание курса')),
                ('slot_count', models.IntegerField(default=0)),
                ('address', models.CharField(default='', max_length=300, verbose_name='Адрес места проведения курса')),
                ('begin_time', models.TimeField(default='00:00', verbose_name='Время начала')),
                ('end_time', models.TimeField(default='00:00', verbose_name='Время окончания')),
                ('slot_zan', models.IntegerField(blank=True, default=0)),
                ('nabor', models.BooleanField(default=True, verbose_name='Набор')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to=settings.AUTH_USER_MODEL, verbose_name='Автор курса')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KandidatTester',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('file', models.FileField(upload_to='2019-03-13/notifications')),
                ('file_name', models.CharField(default='', max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
                ('announce', models.TextField(default='')),
                ('detail', models.TextField(default='')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationReader',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('hidden', models.BooleanField(default=False)),
                ('notification',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.NotificationMessage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
                ('color', models.CharField(default='', max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PortfolioArchive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('file', models.TextField(default='')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PortfolioDekret',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('date_begin', models.DateField(verbose_name='date_begin')),
                ('date_end', models.DateField(blank=True, null=True, verbose_name='date_end')),
                ('changer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                              to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PortfolioDopFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('obj_pk', models.IntegerField(default=0)),
                ('file', models.FileField(upload_to='2019-03-13/dop_file/')),
                ('model_name', models.CharField(default='', max_length=255)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                           to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeacherAttestationMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
                ('header_ru', models.CharField(default='', max_length=255)),
                ('header_kz', models.CharField(default='', max_length=255)),
                ('in_text_ru', models.CharField(default='', max_length=255)),
                ('in_text_kz', models.CharField(default='', max_length=255)),
                ('in_text1_ru', models.CharField(default='', max_length=255)),
                ('in_text1_kz', models.CharField(default='', max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VacancySchool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('load', models.FloatField(default=0, verbose_name='Нагрузка, ч')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('oklad', models.IntegerField(blank=True, default=0, null=True, verbose_name='Оклад, KZT')),
                ('stazh', models.FloatField(default=0, verbose_name='Стаж, лет')),
                ('klass_ruk', models.BooleanField(default=False, verbose_name='Классное руководство')),
                ('prov_tetr', models.BooleanField(default=False, verbose_name='Проверка тетрадей')),
                ('author', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE,
                                             to=settings.AUTH_USER_MODEL)),
                ('category_teacher',
                 models.ManyToManyField(blank=True, to='portfoli.TeacherCategory', verbose_name='Требуемые категории')),
                ('degree', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to='portfoli.Degree', verbose_name='Требуемая ученая степень')),
                ('english_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                                    to='portfoli.EnglishLevel',
                                                    verbose_name='Требуемый уровень владения английским языком')),
            ],
            options={
                'verbose_name': 'vacancy school',
                'verbose_name_plural': 'vacancies school',
            },
        ),
        migrations.CreateModel(
            name='VacancyStatement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('phone_number', models.CharField(max_length=20, verbose_name='Номер телефона')),
                ('portfolio', models.CharField(max_length=70, verbose_name='ФИО')),
                ('email', models.EmailField(default='', max_length=254, verbose_name='EMAIL')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('stazh', models.FloatField(default=0)),
                ('category_teacher',
                 models.ManyToManyField(blank=True, to='portfoli.TeacherCategory', verbose_name='Ваша категория')),
                ('degree', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to='portfoli.Degree')),
                ('english_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                                    to='portfoli.EnglishLevel')),
                ('study_language',
                 models.ManyToManyField(to='portfoli.Language', verbose_name='На каких языках Вы преподаете')),
                ('vacancy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                              to='portfoli.VacancySchool')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VacancyStatementAuth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VacancyStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500)),
                ('name_kk', models.CharField(blank=True, default='', max_length=500)),
                ('name_en', models.CharField(blank=True, default='', max_length=500)),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='almamater',
            name='accounter_name',
            field=models.CharField(blank=True, default='', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='almamater',
            name='director_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='director_user', to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='almamater',
            name='kadr_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='kadr_user', to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='almamater',
            name='librarian_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='librarian_user', to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='almamater',
            name='librarian_zam',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='librarian_zam', to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='almamater',
            name='nmr_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='nmr_user', to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='almamater',
            name='phone_accounter',
            field=models.CharField(blank=True, default='', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='almamater',
            name='phone_hr',
            field=models.CharField(blank=True, default='', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='almamater',
            name='school_email',
            field=models.EmailField(blank=True, default='', max_length=254, null=True, verbose_name='email'),
        ),
        migrations.AddField(
            model_name='coursetype',
            name='description',
            field=models.CharField(default='', max_length=300, verbose_name='Описание курса'),
        ),
        migrations.AddField(
            model_name='coursetype',
            name='image',
            field=models.ImageField(null=True, upload_to='2019-03-13/coursetype', verbose_name='Scan view'),
        ),
        migrations.AddField(
            model_name='coursevid',
            name='school_type',
            field=models.ManyToManyField(to='portfoli.SchoolType'),
        ),
        migrations.AddField(
            model_name='kandidat',
            name='statement',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.PortfolioStatement'),
        ),
        migrations.AddField(
            model_name='kandidat',
            name='verdikt_cmo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='verdikt_cmo', to='portfoli.Verdikt'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='city',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Place'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='course_admin',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='has_error_avatar',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='has_error_education',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='has_error_education_slave',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='has_error_firtst_name',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='has_error_iin',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='has_error_last_name',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='has_error_patronymic_name',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='has_error_sex',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='has_error_view_in_dat_pad',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='has_error_view_in_dat_pad_kaz',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='uo_babushka',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfoliostatement',
            name='current_status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.TeacherCategory', verbose_name='Текущая категория'),
        ),
        migrations.AddField(
            model_name='portfoliostatement',
            name='positions_old',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.Position', verbose_name='positions'),
        ),
        migrations.AddField(
            model_name='portfolioworktimeline',
            name='positions_string',
            field=models.CharField(blank=True, default='', max_length=255, verbose_name='positions'),
        ),
        migrations.AddField(
            model_name='position',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Subject'),
        ),
        migrations.AddField(
            model_name='subject',
            name='is_estestv',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='teacherattestation',
            name='school_type',
            field=models.ManyToManyField(to='portfoli.SchoolType'),
        ),
        migrations.AddField(
            model_name='teacherscale',
            name='attestation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.TeacherAttestation'),
        ),
        migrations.AddField(
            model_name='teacherscale',
            name='min_value',
            field=models.IntegerField(default=1),
        ),
        migrations.AddField(
            model_name='testing',
            name='verdikt',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.Verdikt'),
        ),
        migrations.AddField(
            model_name='testing',
            name='verdikt_system',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='verdikt',
                                    to='portfoli.Verdikt'),
        ),
        migrations.AddField(
            model_name='verdikt',
            name='uo_kk',
            field=models.CharField(default='', max_length=255),
        ),
        migrations.AddField(
            model_name='verdikt',
            name='uo_ru',
            field=models.CharField(default='', max_length=255),
        ),
        migrations.AlterField(
            model_name='almamater',
            name='image',
            field=models.ImageField(default='nophoto.png', upload_to='2019-03-13/almamater'),
        ),
        migrations.AlterField(
            model_name='portfolio',
            name='avatar',
            field=models.ImageField(blank=True, default='nophoto.png', null=True, upload_to='2019-03-13/portfolio/'),
        ),
        migrations.AlterField(
            model_name='portfoliobonus',
            name='image',
            field=models.ImageField(upload_to='2019-03-13/bonus', verbose_name='i18 the diploma'),
        ),
        migrations.AlterField(
            model_name='portfolioeducation',
            name='image',
            field=models.ImageField(upload_to='2019-03-13/education', verbose_name='i18 the diploma'),
        ),
        migrations.AlterField(
            model_name='portfoliolistofview',
            name='image',
            field=models.ImageField(upload_to='2019-03-13/listobservation', verbose_name='Scan view'),
        ),
        migrations.AlterField(
            model_name='portfoliostatement',
            name='positions',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='positions',
                                    to='portfoli.Position', verbose_name='positions'),
        ),
        migrations.AlterField(
            model_name='schoolbonus',
            name='image',
            field=models.ImageField(default='/static/images/nophoto.png', upload_to='2019-03-13/bonus'),
        ),
        migrations.AlterField(
            model_name='testavatar',
            name='avatar',
            field=models.ImageField(blank=True, default='/static/images/nophoto.png', null=True,
                                    upload_to='2019-03-13/testavatar'),
        ),
        migrations.AddField(
            model_name='vacancystatementauth',
            name='portfolio',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='vacancystatementauth',
            name='vacancy',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.VacancySchool'),
        ),
        migrations.AddField(
            model_name='vacancyschool',
            name='position',
            field=models.ForeignKey(max_length=200, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Position',
                                    verbose_name='positions'),
        ),
        migrations.AddField(
            model_name='vacancyschool',
            name='status',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='portfoli.VacancyStatus',
                                    verbose_name='Статус вакансии'),
        ),
        migrations.AddField(
            model_name='vacancyschool',
            name='study_language',
            field=models.ManyToManyField(to='portfoli.Language', verbose_name='Предполагаемое преподавание на языках'),
        ),
        migrations.AddField(
            model_name='vacancyschool',
            name='vacancy_school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.AlmaMater',
                                    verbose_name='school'),
        ),
        migrations.AddField(
            model_name='portfoliodekret',
            name='portfolio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='portfolioarchive',
            name='kandidat',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Kandidat'),
        ),
        migrations.AddField(
            model_name='notificationreader',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='notificationmessage',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='author',
                                    to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='notificationmessage',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.NotificationMessage'),
        ),
        migrations.AddField(
            model_name='notificationmessage',
            name='recipient',
            field=models.ManyToManyField(to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='notificationmessage',
            name='status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.NotificationStatus'),
        ),
        migrations.AddField(
            model_name='notificationfile',
            name='notification',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.NotificationMessage'),
        ),
        migrations.AddField(
            model_name='kandidattester',
            name='attestation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.TeacherAttestation'),
        ),
        migrations.AddField(
            model_name='kandidattester',
            name='kandidat',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Kandidat'),
        ),
        migrations.AddField(
            model_name='kandidattester',
            name='tester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.TeacherAttestationUser'),
        ),
        migrations.AddField(
            model_name='goscourse',
            name='center',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.AlmaMater',
                                    verbose_name='ЦПК'),
        ),
        migrations.AddField(
            model_name='goscourse',
            name='course_subject',
            field=models.ManyToManyField(blank=True, to='portfoli.Subject', verbose_name='Предмет'),
        ),
        migrations.AddField(
            model_name='goscourse',
            name='course_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.CourseType',
                                    verbose_name='Тип курса'),
        ),
        migrations.AddField(
            model_name='goscourse',
            name='course_vid',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.CourseVid', verbose_name='Уровень образования'),
        ),
        migrations.AddField(
            model_name='goscourse',
            name='study_language',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Language',
                                    verbose_name='Язык обучения'),
        ),
        migrations.AddField(
            model_name='cpk',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.AlmaMater'),
        ),
        migrations.AddField(
            model_name='coursestatement',
            name='gos_course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.GosCourse'),
        ),
        migrations.AddField(
            model_name='coursestatement',
            name='portfolio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio',
                                    verbose_name='Учитель'),
        ),
        migrations.AddField(
            model_name='coursestatement',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.AlmaMater',
                                    verbose_name='school'),
        ),
        migrations.AddField(
            model_name='kandidat',
            name='method',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.TeacherAttestationMethod'),
        ),
        migrations.AddField(
            model_name='portfoliostatement',
            name='method',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.TeacherAttestationMethod', verbose_name='Подтверждение/присвоение'),
        ),
        migrations.AlterField(
            model_name='almamater',
            name='image',
            field=models.ImageField(default='nophoto.png', upload_to='2019-03-14/almamater'),
        ),
        migrations.AlterField(
            model_name='coursetype',
            name='image',
            field=models.ImageField(null=True, upload_to='2019-03-14/coursetype', verbose_name='Scan view'),
        ),
        migrations.AlterField(
            model_name='goscourse',
            name='course_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_type',
                                    to='portfoli.CourseType', verbose_name='Тип курса'),
        ),
        migrations.RemoveField(
            model_name='kandidat',
            name='position',
        ),
        migrations.AddField(
            model_name='kandidat',
            name='position',
            field=models.ManyToManyField(to='portfoli.Position'),
        ),
        migrations.AlterField(
            model_name='notificationfile',
            name='file',
            field=models.FileField(upload_to='2019-03-14/notifications'),
        ),
        migrations.AlterField(
            model_name='portfolio',
            name='avatar',
            field=models.ImageField(blank=True, default='nophoto.png', null=True, upload_to='2019-03-14/portfolio/'),
        ),
        migrations.AlterField(
            model_name='portfoliobonus',
            name='image',
            field=models.ImageField(upload_to='2019-03-14/bonus', verbose_name='i18 the diploma'),
        ),
        migrations.AlterField(
            model_name='portfoliodopfile',
            name='file',
            field=models.FileField(upload_to='2019-03-14/dop_file/'),
        ),
        migrations.AlterField(
            model_name='portfolioeducation',
            name='image',
            field=models.ImageField(upload_to='2019-03-14/education', verbose_name='i18 the diploma'),
        ),
        migrations.AlterField(
            model_name='portfoliolistofview',
            name='image',
            field=models.ImageField(upload_to='2019-03-14/listobservation', verbose_name='Scan view'),
        ),
        migrations.RemoveField(
            model_name='portfoliostatement',
            name='positions',
        ),
        migrations.AddField(
            model_name='portfoliostatement',
            name='positions',
            field=models.ManyToManyField(related_name='positions', to='portfoli.Position', verbose_name='positions'),
        ),
        migrations.AlterField(
            model_name='schoolbonus',
            name='image',
            field=models.ImageField(default='/static/images/nophoto.png', upload_to='2019-03-14/bonus'),
        ),
        migrations.AlterField(
            model_name='testavatar',
            name='avatar',
            field=models.ImageField(blank=True, default='/static/images/nophoto.png', null=True,
                                    upload_to='2019-03-14/testavatar'),
        ),
        migrations.AlterField(
            model_name='upwork',
            name='country',
            field=models.ForeignKey(null=True,
                                    on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.Country',
                                    verbose_name='Country'),
        ), migrations.CreateModel(
            name='ChangeResponsibleHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('before', models.EmailField(default='', max_length=254)),
                ('after', models.EmailField(default='', max_length=254)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='coursesubject',
            name='course_type',
        ),
        migrations.RemoveField(
            model_name='coursesubject',
            name='course_vid',
        ),
        migrations.AddField(
            model_name='analiticquery',
            name='hh',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='changeresponsiblehistory',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.AlmaMater'),
        ),
        migrations.AddField(
            model_name='changeresponsiblehistory',
            name='who',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='kandidat',
            name='correct_svid',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='kandidat',
            name='uncorrect_svid',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='public',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='public_attesta',
            field=models.BooleanField(default=False, verbose_name='Разрешаю видеть аттестацию'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='public_bonus',
            field=models.BooleanField(default=False, verbose_name='Разрешаю видеть достижения'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='public_bonus_student',
            field=models.BooleanField(default=False, verbose_name='Разрешаю видеть достижения учащихся'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='public_email',
            field=models.BooleanField(default=False, verbose_name='Разрешаю видеть email'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='public_list_observ',
            field=models.BooleanField(default=False, verbose_name='Разрешаю видеть листы наблюдения уроков'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='public_phone',
            field=models.BooleanField(default=False, verbose_name='Разрешаю видеть телефон'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='public_upwork',
            field=models.BooleanField(default=False, verbose_name='Разрешаю видеть повышение квалификации'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='unique',
            field=models.CharField(default='', max_length=255),
        ),
        migrations.AddField(
            model_name='teacherattestation',
            name='uo_blocked',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='activate',
            name='html_content',
            field=models.CharField(default='', max_length=1000000),
        ),
        migrations.AlterField(
            model_name='address',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='address',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='address',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='almamater',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='almamater',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='almamater',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='analiticquery',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='analiticquery',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='analiticquery',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='attestation',
            name='image',
            field=models.ImageField(upload_to='2019-03-14/attestation', verbose_name='i18 the diploma'),
        ),
        migrations.AlterField(
            model_name='computerskills',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='computerskills',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='computerskills',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='country',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='country',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='country',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='coursetheme',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='coursetheme',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='coursetheme',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='coursetype',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='coursetype',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='coursetype',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='coursevid',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='coursevid',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='coursevid',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='dateobjects',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='dateobjects',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='dateobjects',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='degree',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='degree',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='degree',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='educationtype',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='educationtype',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='educationtype',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='englishlevel',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='englishlevel',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='englishlevel',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='goscourse',
            name='course_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.CourseType',
                                    verbose_name='Тип курса'),
        ),
        migrations.AlterField(
            model_name='goscourse',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='goscourse',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='goscourse',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='kandidat',
            name='verdikt',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='verdict_uo', to='portfoli.Verdikt'),
        ),
        migrations.AlterField(
            model_name='klass',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='klass',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='klass',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='language',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='language',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='language',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='listobservations',
            name='image',
            field=models.ImageField(default='/static/images/nophoto.png', upload_to='2019-03-14/listobservation'),
        ),
        migrations.AlterField(
            model_name='news',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='news',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='news',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='note',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='note',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='note',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='notificationmessage',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='notificationmessage',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='notificationmessage',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='notificationstatus',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='notificationstatus',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='notificationstatus',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='place',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='place',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='place',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='portfolio',
            name='date_dekret',
            field=models.DateField(blank=True, null=True, verbose_name='date_begin'),
        ),
        migrations.AlterField(
            model_name='portfolio',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='portfolio',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='portfolio',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='portfoliobonusstudent',
            name='image',
            field=models.ImageField(upload_to='2019-03-14/bonus', verbose_name='i18 the diploma'),
        ),
        migrations.AlterField(
            model_name='portfoliostatement',
            name='date_end',
            field=models.DateField(null=True, verbose_name='Дата подачи заявления в УО'),
        ),
        migrations.AlterField(
            model_name='portfoliostatement',
            name='status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.TeacherStatus',
                                    verbose_name='Претендуемая категория'),
        ),
        migrations.AlterField(
            model_name='portfolioworktimeline',
            name='positions',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.Position', verbose_name='positions'),
        ),
        migrations.AlterField(
            model_name='position',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='position',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='position',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='protocol',
            name='file',
            field=models.FileField(upload_to='2019-03-14/protocol'),
        ),
        migrations.AlterField(
            model_name='quality',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='quality',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='quality',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='scale',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='scale',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='scale',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='schooltype',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='schooltype',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='schooltype',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='schooltypegroup',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='schooltypegroup',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='schooltypegroup',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='sex',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='sex',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='sex',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='speciality',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='speciality',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='speciality',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='studenttypeofachievement',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='studenttypeofachievement',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='studenttypeofachievement',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='subject',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='subject',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='subject',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='teacherattestation',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='teacherattestation',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='teacherattestation',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='teacherattestationmethod',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='teacherattestationmethod',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='teacherattestationmethod',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='teachercategory',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='teachercategory',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='teachercategory',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='teacherscale',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='teacherscale',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='teacherscale',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='teacherstatus',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='teacherstatus',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='teacherstatus',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='testschool',
            name='image',
            field=models.ImageField(default='/static/images/nophoto.png', upload_to='2019-03-14/testalmamater'),
        ),
        migrations.AlterField(
            model_name='typeofachievement',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='typeofachievement',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='typeofachievement',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='upwork',
            name='course_subject',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.Subject', verbose_name='Course subject'),
        ),
        migrations.AlterField(
            model_name='upwork',
            name='course_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.CourseType',
                                    verbose_name='Course type'),
        ),
        migrations.AlterField(
            model_name='upwork',
            name='course_vid',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.CourseVid', verbose_name='Уровень образования'),
        ),
        migrations.AlterField(
            model_name='upwork',
            name='englishlevel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.EnglishLevel', verbose_name='i18 englishlevel'),
        ),
        migrations.AlterField(
            model_name='upwork',
            name='image',
            field=models.ImageField(upload_to='2019-03-14/upwork', verbose_name='i18 the diploma'),
        ),
        migrations.AlterField(
            model_name='upwork',
            name='scale',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Scale',
                                    verbose_name='i18 Level'),
        ),
        migrations.AlterField(
            model_name='upwork',
            name='school',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.AlmaMater', verbose_name='Наименование организации'),
        ),
        migrations.AlterField(
            model_name='vacancystatus',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='vacancystatus',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='vacancystatus',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='verdikt',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='verdikt',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='verdikt',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='worktype',
            name='name_en',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='worktype',
            name='name_kk',
            field=models.CharField(blank=True, default='', max_length=500, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='worktype',
            name='name_ru',
            field=models.CharField(default='', max_length=500, verbose_name='Название'),
        ),
        migrations.DeleteModel(
            name='CourseSubject',
        ),

        # To make migrations


        migrations.CreateModel(
            name='Recall',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('text', models.TextField(default='', verbose_name='Leave your feedback')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RegisterSchool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500, verbose_name='Название')),
                ('name_kk', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
                ('fio_rukovod', models.CharField(default='', max_length=255, verbose_name='ФИО')),
                ('school_bin', models.CharField(default='', max_length=255, verbose_name='БИН')),
                ('school_phone', models.CharField(default='', max_length=255, verbose_name='Номер телефона')),
                ('school_email', models.CharField(default='', max_length=255, verbose_name='Адрес электронной почты')),
                ('address', models.CharField(default='', max_length=255, verbose_name='Адрес')),
                ('fio_otvetstv', models.CharField(default='', max_length=255, verbose_name='ФИО')),
                ('phone_otvetstv', models.CharField(default='', max_length=255, verbose_name='Номер телефона')),
                (
                'email_otvetstv', models.CharField(default='', max_length=255, verbose_name='Адрес электронной почты')),
                ('hash', models.TextField(blank=True, verbose_name='хэш заявки')),
                ('signature_iin', models.CharField(default='', max_length=255)),
                ('signature_fio', models.CharField(default='', max_length=255)),
                ('image', models.ImageField(upload_to='usr/2019-06-20/responisble_statement', verbose_name='Приказ')),
                ('school_type',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.SchoolType',
                                   verbose_name='Тип организации')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RecallLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
                ('recall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Recall')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RecallDisLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
                ('recall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Recall')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RecallComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('text', models.TextField(default='', verbose_name='Leave your comment')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
                ('recall', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Recall')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AttPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500, verbose_name='Название')),
                ('name_kk', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
                ('year', models.PositiveIntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AwardScale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500, verbose_name='Название')),
                ('name_kk', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompetitionVacancy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500, verbose_name='Название')),
                ('name_kk', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompetitionVacancyStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500, verbose_name='Название')),
                ('name_kk', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('contract_number', models.CharField(default='', max_length=255)),
                ('date_begin', models.DateField(null=True)),
                ('date_end', models.DateField(null=True)),
                ('price', models.FloatField(default=0)),
                ('discount', models.FloatField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CriteriaDir',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500, verbose_name='Название')),
                ('name_kk', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CriteriaDirGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500, verbose_name='Название')),
                ('name_kk', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CriteriaZam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500, verbose_name='Название')),
                ('name_kk', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DocType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500, verbose_name='Название')),
                ('name_kk', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DontHaveRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('pane', models.CharField(blank=True, default='', max_length=50)),
                ('page_title', models.CharField(blank=True, default='', max_length=50)),
                ('checked', models.BooleanField(default=False)),
                ('anulirovan', models.BooleanField(default=False)),
                ('content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                                   to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExpertType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500, verbose_name='Название')),
                ('name_kk', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HasTesting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MeetingInfoRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('server_id', models.IntegerField()),
                ('attenders', models.IntegerField()),
                ('live_meetings', models.IntegerField()),
                ('attenders_ep', models.IntegerField(default=0)),
                ('live_meetings_ep', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Obl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500, verbose_name='Название')),
                ('name_kk', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PokazatelDir',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500, verbose_name='Название')),
                ('name_kk', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
                ('value', models.FloatField(default=0)),
                ('criteria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.CriteriaDir')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PokazatelZam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500, verbose_name='Название')),
                ('name_kk', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
                ('value', models.FloatField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('opened', models.BooleanField(default=False)),
                ('complited', models.BooleanField(default=False)),
                ('sended', models.BooleanField(default=False)),
                ('guid', models.CharField(default='', max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PollAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500, verbose_name='Название')),
                ('name_kk', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
                ('score', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PollCampaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500, verbose_name='Название')),
                ('name_kk', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
                ('users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PollQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500, verbose_name='Название')),
                ('name_kk', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
                ('many', models.BooleanField(default=False)),
                ('campaign', models.ManyToManyField(to='portfoli.PollCampaign')),
                ('poll', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Poll')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PortfolioCriteriaDir',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('checked', models.BooleanField(default=False)),
                ('when_checked', models.DateTimeField(blank=True, null=True)),
                ('image',
                 models.ImageField(upload_to=portfoli.models_core.upload_portfolio_image_target, verbose_name='Image')),
                ('image_getted', models.BooleanField(default=False)),
                ('att_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.AttPeriod',
                                                 verbose_name='Att period')),
                ('changer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                              to=settings.AUTH_USER_MODEL)),
                ('criteria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.CriteriaDir',
                                               verbose_name='Criteria')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PortfolioCriteriaZam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('checked', models.BooleanField(default=False)),
                ('when_checked', models.DateTimeField(blank=True, null=True)),
                ('image',
                 models.ImageField(upload_to=portfoli.models_core.upload_portfolio_image_target, verbose_name='Image')),
                ('image_getted', models.BooleanField(default=False)),
                ('att_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.AttPeriod',
                                                 verbose_name='Att period')),
                ('changer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                              to=settings.AUTH_USER_MODEL)),
                ('criteria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.CriteriaZam',
                                               verbose_name='Criteria')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PortfolioEvaluationCriteria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500, verbose_name='Название')),
                ('name_kk', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PortfolioGeneralizationExperience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('checked', models.BooleanField(default=False)),
                ('when_checked', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateField(verbose_name='Date')),
                ('image_getted', models.BooleanField(default=False)),
                ('image', models.ImageField(upload_to=portfoli.models_core.upload_portfolio_image_target)),
                ('changer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                              to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PortfolioNkt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('checked', models.BooleanField(default=False)),
                ('when_checked', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateField(verbose_name='Testing date')),
                ('image_getted', models.BooleanField(default=False)),
                ('image', models.ImageField(upload_to=portfoli.models_core.upload_portfolio_image_target)),
                ('sup_mark',
                 models.PositiveIntegerField(default=0, verbose_name='«Содержание учебного предмета» (баллы)')),
                ('pmo_mark',
                 models.PositiveIntegerField(default=0, verbose_name='«Педагогика, методика обучения» (баллы) ')),
                ('changer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                              to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuerySection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500, verbose_name='Название')),
                ('name_kk', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500, verbose_name='Название')),
                ('name_kk', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500, verbose_name='Название')),
                ('name_kk', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentTableDest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500, verbose_name='Название')),
                ('name_kk', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudenTtableImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('checked', models.BooleanField(default=False)),
                ('when_checked', models.DateTimeField(blank=True, null=True)),
                ('image_getted', models.BooleanField(default=False)),
                ('image', models.ImageField(upload_to=portfoli.models_core.upload_portfolio_image_target)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeacherAttestationTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500, verbose_name='Название')),
                ('name_kk', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
                ('text', models.TextField(default='')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestCroperMain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('image', models.ImageField(upload_to=portfoli.models_core.upload_test_crop)),
                ('model_name', models.CharField(max_length=255)),
                ('object_pk', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TypeOfAward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500, verbose_name='Название')),
                ('name_kk', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Webinar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('finished', models.BooleanField(default=True)),
                ('moderator', models.CharField(max_length=255)),
                ('webinar_id', models.CharField(max_length=3)),
                ('for_all', models.BooleanField(default=True)),
                ('for_zavuch', models.BooleanField(default=True)),
                ('for_region_otv', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterModelOptions(
            name='dateobjects',
            options={'ordering': ['sort']},
        ),
        migrations.AlterModelOptions(
            name='studenttable',
            options={'ordering': ['date_objects__sort', 'klass__table_sort']},
        ),
        migrations.RemoveField(
            model_name='portfolio',
            name='languages',
        ),
        migrations.RemoveField(
            model_name='portfolio',
            name='specialities',
        ),
        migrations.RemoveField(
            model_name='portfolio',
            name='unique',
        ),
        migrations.AddField(
            model_name='activate',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='address',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='adsattestation',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='almamater',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='almamater',
            name='deputy_for_education',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='deputy_for_education', to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='almamater',
            name='iinbin',
            field=models.CharField(blank=True, default='', max_length=255),
        ),
        migrations.AddField(
            model_name='almamater',
            name='jew',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='almamater',
            name='reindexed',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='analiticquery',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='analiticquery',
            name='has_custom_module',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='analiticquery',
            name='lang',
            field=models.CharField(default='ru', max_length=255),
        ),
        migrations.AddField(
            model_name='analiticquery',
            name='module_name',
            field=models.CharField(default='', max_length=255),
        ),
        migrations.AddField(
            model_name='applicationads',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='attestation',
            name='checked',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='attestation',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='attestation',
            name='when_checked',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='attestation',
            name='who_checked',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='whu_checked_attestation', to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='blockhistory',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='categorytocategory',
            name='sort',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='changeemailtask',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='changeresponsiblehistory',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='computerskills',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='country',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='coursestatement',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='coursetheme',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='coursetype',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='coursevid',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='currentworktimeline',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='dateobjects',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='degree',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='educationtype',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='englishlevel',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='errormessage',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='forgetpasswordrec',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='goscourse',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='kandidat',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='kandidat',
            name='view_in_dat_pad',
            field=models.CharField(default='', max_length=500, null=True, verbose_name='View in dat pad'),
        ),
        migrations.AddField(
            model_name='kandidat',
            name='view_in_dat_pad_kaz',
            field=models.CharField(default='', max_length=500, null=True, verbose_name='View in dat pad kaz'),
        ),
        migrations.AddField(
            model_name='kandidatstatushistory',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='kandidattester',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='kandidattester',
            name='testing',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.Testing'),
        ),
        migrations.AddField(
            model_name='kandidatverdikthistory',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='klass',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='klass',
            name='table_sort',
            field=models.IntegerField(default=500),
        ),
        migrations.AddField(
            model_name='klass',
            name='tech_code',
            field=models.CharField(default='0', max_length=255),
        ),
        migrations.AddField(
            model_name='language',
            name='code',
            field=models.CharField(default='', max_length=255),
        ),
        migrations.AddField(
            model_name='language',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='listobservations',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='news',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='note',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='notificationfile',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='notificationmessage',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='notificationreader',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='notificationstatus',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='phoneactivate',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='place',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='aspirant',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='attestation_responsible',
            field=models.BooleanField(default=False, verbose_name='Ответственный за аттестацию'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='competition_kandidat',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='current_language',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Language'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='date_dont_have_attestation',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='date_dont_have_bonus',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='date_dont_have_bonus_student',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='date_dont_have_list_of_view',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='date_dont_have_studen_table',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='date_dont_have_upwork',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='director',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='dont_have_attestation',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='dont_have_bonus',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='dont_have_bonus_student',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='dont_have_list_of_view',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='dont_have_studen_table',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='dont_have_upwork',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='has_error_current_language',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='old_fio',
            field=models.CharField(blank=True, default='', max_length=255, verbose_name='OldName'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='phone_clean',
            field=models.CharField(blank=True, default='', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='unical',
            field=models.CharField(blank=True, default='', max_length=255),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='uo_kadr',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='voluntary_aspirant',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='wallpaper',
            field=models.ImageField(blank=True, default='nophoto.png',
                                    upload_to=portfoli.models_core.upload_avatar_target),
        ),
        migrations.AddField(
            model_name='portfolioarchive',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='portfoliobonus',
            name='checked',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfoliobonus',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='portfoliobonus',
            name='position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Position',
                                    verbose_name='positions'),
        ),
        migrations.AddField(
            model_name='portfoliobonus',
            name='when_checked',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='portfoliobonus',
            name='who_checked',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='whu_checked_bonus', to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='portfoliobonusstudent',
            name='checked',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfoliobonusstudent',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='portfoliobonusstudent',
            name='position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Position',
                                    verbose_name='positions'),
        ),
        migrations.AddField(
            model_name='portfoliobonusstudent',
            name='when_checked',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='portfoliobonusstudent',
            name='who_checked',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='whu_checked_bonus_student', to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='portfoliodekret',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='portfoliodopfile',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='portfolioeducation',
            name='checked',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolioeducation',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='portfolioeducation',
            name='when_checked',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='portfolioeducation',
            name='who_checked',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='whu_checked_education', to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='portfoliolistofview',
            name='checked',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfoliolistofview',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='portfoliolistofview',
            name='position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Position',
                                    verbose_name='positions'),
        ),
        migrations.AddField(
            model_name='portfoliolistofview',
            name='when_checked',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='portfoliolistofview',
            name='who_checked',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='whu_checked_list_of_view', to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='portfoliostatement',
            name='bonus_students',
            field=models.ManyToManyField(blank=True, to='portfoli.PortfolioBonusStudent',
                                         verbose_name='i18 student student'),
        ),
        migrations.AddField(
            model_name='portfoliostatement',
            name='bonuses',
            field=models.ManyToManyField(blank=True, to='portfoli.PortfolioBonus', verbose_name='i18 student awards'),
        ),
        migrations.AddField(
            model_name='portfoliostatement',
            name='bonuses_for_degree',
            field=models.ManyToManyField(blank=True, related_name='bonuses_for_degree', to='portfoli.PortfolioBonus',
                                         verbose_name='i18 student awards'),
        ),
        migrations.AddField(
            model_name='portfoliostatement',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='portfoliostatement',
            name='date_storn',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='portfoliostatement',
            name='experience_in_org',
            field=models.FloatField(default=0, verbose_name='experience_in_org'),
        ),
        migrations.AddField(
            model_name='portfoliostatement',
            name='experience_ped',
            field=models.FloatField(default=0, verbose_name='experience_ped'),
        ),
        migrations.AddField(
            model_name='portfoliostatement',
            name='experience_spec',
            field=models.FloatField(default=0, verbose_name='experience_spec'),
        ),
        migrations.AddField(
            model_name='portfoliostatement',
            name='who_storn',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='portfolioworktimeline',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='portfolioworktimeline',
            name='director',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolioworktimeline',
            name='image',
            field=models.ImageField(null=True, upload_to=portfoli.models_core.upload_portfolio_image_target),
        ),
        migrations.AddField(
            model_name='portfolioworktimeline',
            name='image_getted',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='portfolioworktimelineuser',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='position',
            name='attestation_period',
            field=models.IntegerField(default=5, verbose_name='Частота переаттестации'),
        ),
        migrations.AddField(
            model_name='position',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='protocol',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='quality',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='recall',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='recallcomment',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='recalldislike',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='recalllike',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='registerschool',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='registrationprocess',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='scale',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='schoolbonus',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='schooltype',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='schooltype',
            name='image',
            field=models.ImageField(default='/static/images/nophoto.png',
                                    upload_to='usr/common/2021-04-05/school_types'),
        ),
        migrations.AddField(
            model_name='schooltype',
            name='infocode',
            field=models.SmallIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='schooltype',
            name='max_people',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='schooltypegroup',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='sex',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='speciality',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='statementprotocol',
            name='annuled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='statementprotocol',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='statementprotocol',
            name='signature',
            field=models.TextField(default=''),
        ),
        migrations.AddField(
            model_name='statementprotocol',
            name='signed',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='statementprotocolrecord',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='studenttable',
            name='checked',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='studenttable',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='studenttable',
            name='position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Position',
                                    verbose_name='positions'),
        ),
        migrations.AddField(
            model_name='studenttable',
            name='when_checked',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='studenttable',
            name='who_checked',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='whu_checked_ttable', to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='studenttypeofachievement',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='subject',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='teacherattestation',
            name='app_start_date',
            field=models.DateField(blank=True, null=True, verbose_name='Application Start Date'),
        ),
        migrations.AddField(
            model_name='teacherattestation',
            name='attestation_admin',
            field=models.ManyToManyField(blank=True, related_name='attestation_admins', to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='teacherattestation',
            name='attestation_center',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.AlmaMater',
                                    verbose_name='Certifications center'),
        ),
        migrations.AddField(
            model_name='teacherattestation',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='teacher_attestation_author', to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='teacherattestation',
            name='cert_validity',
            field=models.DateField(blank=True, null=True, verbose_name='The certificate is valid until'),
        ),
        migrations.AddField(
            model_name='teacherattestation',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='teacherattestation',
            name='date_finish_ocenka',
            field=models.DateField(null=True, verbose_name='date_finish_ocenka'),
        ),
        migrations.AddField(
            model_name='teacherattestation',
            name='dead_line',
            field=models.DateField(null=True),
        ),
        migrations.AddField(
            model_name='teacherattestation',
            name='insert_position',
            field=models.IntegerField(default=0, verbose_name='Стадия проверки УО (0,1,2)'),
        ),
        migrations.AddField(
            model_name='teacherattestation',
            name='main_expert',
            field=models.ManyToManyField(blank=True, related_name='main_experts', to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='teacherattestation',
            name='operators',
            field=models.ManyToManyField(blank=True, related_name='teacher_attestation_operators',
                                         to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='teacherattestation',
            name='pretendet_category',
            field=models.ManyToManyField(to='portfoli.TeacherStatus', verbose_name='Claimeds category'),
        ),
        migrations.AddField(
            model_name='teacherattestation',
            name='prikaz_number',
            field=models.CharField(blank=True, default='', max_length=50, verbose_name='Prikaz Num'),
        ),
        migrations.AddField(
            model_name='teacherattestation',
            name='ready_to_cert',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='teacherattestation',
            name='rebuilded_testers',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='teacherattestation',
            name='statement_secretar',
            field=models.ManyToManyField(related_name='statement_secretar', to='portfoli.Portfolio',
                                         verbose_name='statement_secretar'),
        ),
        migrations.AddField(
            model_name='teacherattestation',
            name='svid_date_by_kaz',
            field=models.CharField(blank=True, default='', max_length=50, null=True,
                                   verbose_name='Svid publication date by kaz'),
        ),
        migrations.AddField(
            model_name='teacherattestation',
            name='svid_temp',
            field=models.TextField(default=''),
        ),
        migrations.AddField(
            model_name='teacherattestationmethod',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='teacherattestationuser',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='teacherattestationuserhistory',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='teachercategory',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='teacherscale',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='teacherscalesettings',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='teacherstatus',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='telegrammessage',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='testavatar',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='testing',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='testing',
            name='deactivated',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='testing',
            name='dead',
            field=models.NullBooleanField(default=None),
        ),
        migrations.AddField(
            model_name='testing',
            name='errors',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='testingnote',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='testingportfoliobonus',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='testingportfoliobonusstudent',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='testingportfoliolistofview',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='testingstudenttable',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='testingupwork',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='testschool',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='typeofachievement',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='upwork',
            name='checked',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='upwork',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='upwork',
            name='when_checked',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='upwork',
            name='who_checked',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='whu_checked_upwork', to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='useractivity',
            name='portfolio',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='vacancyschool',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='vacancystatement',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='vacancystatementauth',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='vacancystatus',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='verdikt',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AddField(
            model_name='worktype',
            name='date_delete',
            field=models.DateField(blank=True, null=True, verbose_name='date_delete'),
        ),
        migrations.AlterField(
            model_name='almamater',
            name='image',
            field=models.ImageField(default='nophoto.png', upload_to='usr/2021-04-05/almamater'),
        ),
        migrations.AlterField(
            model_name='attestation',
            name='image',
            field=models.ImageField(upload_to=portfoli.models_core.upload_portfolio_image_target,
                                    verbose_name='i18 the diploma'),
        ),
        migrations.RemoveField(
            model_name='attestation',
            name='positions',
        ),
        migrations.AddField(
            model_name='attestation',
            name='positions',
            field=models.ManyToManyField(related_name='pos', to='portfoli.Position', verbose_name='positions'),
        ),
        migrations.AlterField(
            model_name='coursetype',
            name='image',
            field=models.ImageField(null=True, upload_to='usr/common/2021-04-05/coursetype', verbose_name='Scan view'),
        ),
        migrations.AlterField(
            model_name='kandidat',
            name='svid_num',
            field=models.CharField(blank=True, db_index=True, default='', max_length=6),
        ),
        migrations.AlterField(
            model_name='kandidattester',
            name='kandidat',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testers_list',
                                    to='portfoli.Kandidat'),
        ),
        migrations.AlterField(
            model_name='listobservations',
            name='image',
            field=models.ImageField(upload_to=portfoli.models_core.upload_portfolio_image_target),
        ),
        migrations.AlterField(
            model_name='notificationfile',
            name='file',
            field=models.FileField(upload_to='usr/2021-04-05/notifications'),
        ),
        migrations.AlterField(
            model_name='portfolio',
            name='avatar',
            field=models.ImageField(blank=True, default='nophoto.png', null=True,
                                    upload_to=portfoli.models_core.upload_avatar_target),
        ),
        migrations.AlterField(
            model_name='portfolio',
            name='public_attesta',
            field=models.BooleanField(default=False, verbose_name='I allow reviewing certification'),
        ),
        migrations.AlterField(
            model_name='portfolio',
            name='public_bonus',
            field=models.BooleanField(default=False, verbose_name='Let me review achievements'),
        ),
        migrations.AlterField(
            model_name='portfolio',
            name='public_bonus_student',
            field=models.BooleanField(default=False, verbose_name='I allow to view student achievement'),
        ),
        migrations.AlterField(
            model_name='portfolio',
            name='public_email',
            field=models.BooleanField(default=False, verbose_name='I allow to see email'),
        ),
        migrations.AlterField(
            model_name='portfolio',
            name='public_list_observ',
            field=models.BooleanField(default=False, verbose_name='I allow to view lesson sheets'),
        ),
        migrations.AlterField(
            model_name='portfolio',
            name='public_phone',
            field=models.BooleanField(default=False, verbose_name='I allow you to see the phone number'),
        ),
        migrations.AlterField(
            model_name='portfolio',
            name='public_upwork',
            field=models.BooleanField(default=False, verbose_name='I allow to view advanced training'),
        ),
        migrations.AlterField(
            model_name='portfolio',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio',
                                       to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='portfoliobonus',
            name='image',
            field=models.ImageField(upload_to=portfoli.models_core.upload_portfolio_image_target,
                                    verbose_name='i18 the diploma'),
        ),
        migrations.AlterField(
            model_name='portfoliobonusstudent',
            name='image',
            field=models.ImageField(upload_to=portfoli.models_core.upload_portfolio_image_target,
                                    verbose_name='i18 the diploma'),
        ),
        migrations.AlterField(
            model_name='portfoliodopfile',
            name='file',
            field=models.FileField(upload_to=portfoli.models_core.upload_portfolio_dopfile_target),
        ),
        migrations.AlterField(
            model_name='portfolioeducation',
            name='date_begin',
            field=models.DateField(verbose_name='Education date begin'),
        ),
        migrations.AlterField(
            model_name='portfolioeducation',
            name='date_end',
            field=models.DateField(verbose_name='Education date end'),
        ),
        migrations.AlterField(
            model_name='portfolioeducation',
            name='image',
            field=models.ImageField(upload_to=portfoli.models_core.upload_portfolio_image_target,
                                    verbose_name='i18 the diploma'),
        ),
        migrations.AlterField(
            model_name='portfoliolistofview',
            name='image',
            field=models.ImageField(upload_to=portfoli.models_core.upload_portfolio_image_target,
                                    verbose_name='Scan view'),
        ),
        migrations.AlterField(
            model_name='portfoliostatement',
            name='current_status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.TeacherCategory', verbose_name='Currents category'),
        ),
        migrations.AlterField(
            model_name='portfoliostatement',
            name='date_end',
            field=models.DateField(null=True, verbose_name='Date of application in UO'),
        ),
        migrations.AlterField(
            model_name='portfoliostatement',
            name='method',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.TeacherAttestationMethod', verbose_name='Confirmation / assignments'),
        ),
        migrations.AlterField(
            model_name='portfoliostatement',
            name='status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.TeacherStatus',
                                    verbose_name='Claimeds category'),
        ),
        migrations.AlterField(
            model_name='portfolioworktimeline',
            name='date_begin',
            field=models.DateField(verbose_name='Employment date'),
        ),
        migrations.AlterField(
            model_name='portfolioworktimeline',
            name='date_end',
            field=models.DateField(blank=True, null=True, verbose_name='Date of dismissal'),
        ),
        migrations.AlterField(
            model_name='protocol',
            name='file',
            field=models.FileField(upload_to='usr/2021-04-05/protocol'),
        ),
        migrations.AlterField(
            model_name='registerschool',
            name='image',
            field=models.ImageField(upload_to='usr/2021-04-05/responisble_statement', verbose_name='Приказ'),
        ),
        migrations.AlterField(
            model_name='schoolbonus',
            name='image',
            field=models.ImageField(upload_to=portfoli.models_core.upload_portfolio_image_target),
        ),
        migrations.AlterField(
            model_name='teacherattestation',
            name='main_text_kaz',
            field=models.TextField(blank=True, default='', verbose_name='Main text kaz'),
        ),
        migrations.AlterField(
            model_name='teacherattestation',
            name='main_text_rus',
            field=models.TextField(blank=True, default='', verbose_name='Main text rus'),
        ),
        migrations.AlterField(
            model_name='teacherattestation',
            name='school_type',
            field=models.ManyToManyField(blank=True, to='portfoli.SchoolType'),
        ),
        migrations.AlterField(
            model_name='teacherattestation',
            name='svid_date',
            field=models.DateField(blank=True, null=True, verbose_name='Svid publication date'),
        ),
        migrations.AlterField(
            model_name='teacherattestationuser',
            name='date_end',
            field=models.DateField(blank=True, null=True, verbose_name='date_end'),
        ),
        migrations.AlterField(
            model_name='testavatar',
            name='avatar',
            field=models.ImageField(blank=True, null=True, upload_to=portfoli.models_core.upload_test_avatar),
        ),
        migrations.AlterField(
            model_name='testschool',
            name='image',
            field=models.ImageField(default='/static/images/nophoto.png', upload_to='usr/2021-04-05/testalmamater'),
        ),
        migrations.AlterField(
            model_name='upwork',
            name='image',
            field=models.ImageField(upload_to=portfoli.models_core.upload_portfolio_image_target,
                                    verbose_name='i18 the diploma'),
        ),
        migrations.AlterField(
            model_name='upwork',
            name='school',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.AlmaMater', verbose_name='Organization of upwork courses'),
        ),
        migrations.CreateModel(
            name='UserPollAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.PollAnswer')),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Poll')),
                (
                'question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.PollQuestion')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestingStudenTtableImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('ocenka_type', models.IntegerField(blank=True, null=True)),
                ('kandidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Kandidat')),
                ('ocenka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to='portfoli.TeacherScale')),
                ('target',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.StudenTtableImage')),
                ('tester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestingNKT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('ocenka_type', models.IntegerField(blank=True, null=True)),
                ('kandidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Kandidat')),
                ('ocenka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to='portfoli.TeacherScale')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.PortfolioNkt')),
                ('tester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestingGenExp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('ocenka_type', models.IntegerField(blank=True, null=True)),
                ('kandidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Kandidat')),
                ('ocenka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to='portfoli.TeacherScale')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                             to='portfoli.PortfolioGeneralizationExperience')),
                ('tester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestingExpertiza',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('ocenka_type', models.IntegerField(blank=True, null=True)),
                ('kandidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Kandidat')),
                ('ocenka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to='portfoli.TeacherScale')),
                ('target',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.TeacherAttestationUser')),
                ('tester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestingCriteriaZam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('ocenka_type', models.IntegerField(blank=True, null=True)),
                ('kandidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Kandidat')),
                ('ocenka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to='portfoli.TeacherScale')),
                ('target',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.PortfolioCriteriaZam')),
                ('tester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestingCriteriaDir',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('ocenka_type', models.IntegerField(blank=True, null=True)),
                ('kandidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Kandidat')),
                ('ocenka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to='portfoli.TeacherScale')),
                ('target',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.PortfolioCriteriaDir')),
                ('tester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SvidError',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('error_message', models.CharField(max_length=255)),
                ('finished', models.BooleanField(default=False)),
                ('view_in_dat_pad',
                 models.CharField(default='', max_length=500, null=True, verbose_name='View in dat pad')),
                ('view_in_dat_pad_kaz',
                 models.CharField(default='', max_length=500, null=True, verbose_name='View in dat pad kaz')),
                ('kandidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Kandidat')),
                ('method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to='portfoli.TeacherAttestationMethod')),
                ('position', models.ManyToManyField(to='portfoli.Position')),
                ('status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to='portfoli.TeacherStatus')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='studenttableimage',
            name='date_objects',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.DateObjects'),
        ),
        migrations.AddField(
            model_name='studenttableimage',
            name='dest',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.StudentTableDest'),
        ),
        migrations.AddField(
            model_name='studenttableimage',
            name='language_objects',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Language'),
        ),
        migrations.AddField(
            model_name='studenttableimage',
            name='portfolio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='studenttableimage',
            name='position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Position',
                                    verbose_name='positions'),
        ),
        migrations.AddField(
            model_name='studenttableimage',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Subject'),
        ),
        migrations.AddField(
            model_name='studenttableimage',
            name='tester',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='studenttableimage',
            name='who_checked',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='whueses_checked_ttable', to='portfoli.Portfolio'),
        ),
        migrations.CreateModel(
            name='StatementToKill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('statement',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.PortfolioStatement')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StatementSecrectarCheckListRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('statement_check', models.BooleanField(default=False, verbose_name='Заявление')),
                ('statement_comment',
                 models.CharField(blank=True, default='', max_length=1000, verbose_name='Комментарий к заявлению')),
                ('statement_nubmber', models.CharField(default='', max_length=1000)),
                ('statement_nubmber_check', models.BooleanField(default=False, verbose_name='Номер заявления')),
                ('statement_number_comment', models.CharField(blank=True, default='', max_length=1000,
                                                              verbose_name='Комментарий к номеру заявления')),
                ('statement_date_con', models.DateField(null=True, verbose_name='Дата подачи заявления')),
                ('journal_date_con', models.DateField(null=True, verbose_name='Дата регистрации в журнале')),
                ('statement_date_con_check', models.BooleanField(default=False, verbose_name='Дата заявления есть')),
                ('statement_date_con_comment', models.CharField(blank=True, default='', max_length=1000,
                                                                verbose_name='Комментарий к дате подачи заявления')),
                ('fio', models.CharField(default='', max_length=1000)),
                ('fio_check', models.BooleanField(default=False, verbose_name='ФИО')),
                ('fio_comment',
                 models.CharField(blank=True, default='', max_length=1000, verbose_name='Комментарий к ФИО')),
                ('iin', models.CharField(default='', max_length=12)),
                ('iin_check', models.BooleanField(default=False, verbose_name='ИИН')),
                ('iin_comment',
                 models.CharField(blank=True, default='', max_length=1000, verbose_name='Комментарий к ИИН')),
                ('fio_dat_kaz', models.CharField(default='', max_length=100)),
                ('fio_dat_kaz_check',
                 models.BooleanField(default=False, verbose_name='ФИО в дательном падеже на каз. языке')),
                ('fio_dat_kaz_comment', models.CharField(blank=True, default='', max_length=1000,
                                                         verbose_name='Комментарий к ФИО в дательном падеже на каз. языке')),
                ('fio_dat_ru', models.CharField(default='', max_length=100)),
                ('fio_dat_ru_check',
                 models.BooleanField(default=False, verbose_name='ФИО в дательном падеже на рус. языке')),
                ('fio_dat_ru_comment', models.CharField(blank=True, default='', max_length=1000,
                                                        verbose_name='Комментарий к ФИО в дательном падеже на рус. языке')),
                ('position_check', models.BooleanField(default=False, verbose_name='Должность')),
                ('position_comment',
                 models.CharField(blank=True, default='', max_length=1000, verbose_name='Комментарий к должности')),
                ('pretendet_category_check', models.BooleanField(default=False, verbose_name='Претендуемая категория')),
                ('pretendet_category_comment', models.CharField(blank=True, default='', max_length=1000,
                                                                verbose_name='Комментарий к претендуемой категории')),
                ('national_certificate_check', models.BooleanField(default=False,
                                                                   verbose_name='Справка о прохождении национального квалификационного тестирования')),
                ('national_certificate_comment', models.CharField(blank=True, default='', max_length=1000,
                                                                  verbose_name='Комментарий к справке о прохождении национального квалификационного тестирования')),
                ('ud_check',
                 models.BooleanField(default=False, verbose_name='Копия документа, удостоверяющего личность')),
                ('ud_comment', models.CharField(blank=True, default='', max_length=1000,
                                                verbose_name='Комментарий к документу "Копия документа, удостоверяющего личность"')),
                ('diplom_check', models.BooleanField(default=False, verbose_name='Копия диплома об образовании')),
                ('diplom_comment', models.CharField(blank=True, default='', max_length=1000,
                                                    verbose_name='Комментарий к документу "Копия диплома об образовании"')),
                ('up_quality_cert_check',
                 models.BooleanField(default=False, verbose_name='Копия документа о повышении квалификации')),
                ('up_quality_cert_comment', models.CharField(blank=True, default='', max_length=1000,
                                                             verbose_name='Комментарий к документу "Копия документа о повышении квалификации"')),
                ('work_check', models.BooleanField(default=False,
                                                   verbose_name='Копия документа, подтверждающего трудовую деятельность работника ')),
                ('work_comment', models.CharField(blank=True, default='', max_length=1000,
                                                  verbose_name='Комментарий к документу "Копия документа, подтверждающего трудовую деятельность работника"')),
                ('category_check', models.BooleanField(default=False,
                                                       verbose_name='Копия удостоверения о ранее присвоенной квалификационной категории')),
                ('category_comment', models.CharField(blank=True, default='', max_length=1000,
                                                      verbose_name='Комментарий к документу "Копия удостоверения о ранее присвоенной квалификационной категории"')),
                ('prof_achievements_check', models.BooleanField(default=False,
                                                                verbose_name='Сведения о профессиональных достижениях (при их наличии).')),
                ('prof_achievements_comment', models.CharField(blank=True, default='', max_length=1000,
                                                               verbose_name='Комментарий к сведениям о профессиональных достижениях')),
                ('accepted', models.BooleanField(default=False, verbose_name='Форма прошла проверку')),
                ('custom_id', models.CharField(default='', max_length=100, verbose_name='Номер в журнале')),
                ('uniq', models.CharField(default='', max_length=255)),
                ('has_kandidat', models.BooleanField(default=False, verbose_name='Имеется кандидат')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('position', models.ManyToManyField(to='portfoli.Position')),
                ('pretendet_category',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.TeacherStatus')),
                ('statement',
                 models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='secretar_check_list',
                                      to='portfoli.PortfolioStatement')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StatementProtocolRecordAnnulated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('protocol',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.StatementProtocol')),
                ('statement',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.PortfolioStatement')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PublicPortfolioPublications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500, verbose_name='Название')),
                ('name_kk', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.CharField(blank=True, default='', max_length=36, null=True)),
                ('text', models.TextField(default='')),
                ('announce', models.TextField(default='')),
                ('tags', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PublicPortfolioPublicationComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('text', models.TextField(default='', verbose_name='Комментарий')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                                  to='portfoli.PublicPortfolioPublications')),
                ('send_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                              to='portfoli.PublicPortfolioPublicationComment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PublicaPortfolioPublicationWathcer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                                  to='portfoli.PublicPortfolioPublications')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrivateDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('image', models.ImageField(upload_to=portfoli.models_core.upload_portfolio_image_target)),
                ('doc_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.DocType',
                                               verbose_name='Тип документа')),
                ('portfolio',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PortfolioPedStazh',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('position_str', models.CharField(default='', max_length=255)),
                ('ped_stazh', models.FloatField(default=0)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
                ('position',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Position')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='portfolionkt',
            name='dest',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.SchoolTypeGroup'),
        ),
        migrations.AddField(
            model_name='portfolionkt',
            name='place',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Place',
                                    verbose_name='City'),
        ),
        migrations.AddField(
            model_name='portfolionkt',
            name='portfolio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='portfolionkt',
            name='position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Position',
                                    verbose_name='Select position'),
        ),
        migrations.AddField(
            model_name='portfolionkt',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Subject',
                                    verbose_name='i18 subject'),
        ),
        migrations.AddField(
            model_name='portfolionkt',
            name='who_checked',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='whuse_checked_list_of_view', to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='portfoliogeneralizationexperience',
            name='place',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Place',
                                    verbose_name='City'),
        ),
        migrations.AddField(
            model_name='portfoliogeneralizationexperience',
            name='portfolio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='portfoliogeneralizationexperience',
            name='position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Position',
                                    verbose_name='Select position'),
        ),
        migrations.AddField(
            model_name='portfoliogeneralizationexperience',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Subject',
                                    verbose_name='i18 subject'),
        ),
        migrations.AddField(
            model_name='portfoliogeneralizationexperience',
            name='type_of_achievement',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.TypeOfAchievement', verbose_name='i18 type_of_achievement'),
        ),
        migrations.AddField(
            model_name='portfoliogeneralizationexperience',
            name='who_checked',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='whus_checked_list_of_view', to='portfoli.Portfolio'),
        ),
        migrations.CreateModel(
            name='PortfolioCurrentCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('category_year', models.DateTimeField(null=True)),
                ('category',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.TeacherCategory')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Position')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='portfoliocriteriazam',
            name='portfolio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='portfoliocriteriazam',
            name='value',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.PokazatelZam',
                                    verbose_name='Mark'),
        ),
        migrations.AddField(
            model_name='portfoliocriteriazam',
            name='who_checked',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='whus_checked_portfolio_criteria_zam', to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='portfoliocriteriadir',
            name='dest',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.SchoolTypeGroup', verbose_name='Type of school'),
        ),
        migrations.AddField(
            model_name='portfoliocriteriadir',
            name='portfolio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='portfoliocriteriadir',
            name='value',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.PokazatelDir',
                                    verbose_name='Mark'),
        ),
        migrations.AddField(
            model_name='portfoliocriteriadir',
            name='who_checked',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='whus_checked_portfolio_criteria_dir', to='portfoli.Portfolio'),
        ),
        migrations.CreateModel(
            name='PortfolioAward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('date', models.DateField(verbose_name='Date_bonus')),
                ('image', models.ImageField(upload_to=portfoli.models_core.upload_portfolio_image_target,
                                            verbose_name='i18 the diploma')),
                ('image_getted', models.BooleanField(default=False)),
                ('changer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                              to=settings.AUTH_USER_MODEL)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
                ('scale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.AwardScale',
                                            verbose_name='i18 Level')),
                ('type_of_award',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.TypeOfAward',
                                   verbose_name='i18 type_of_achievement')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='pollanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.PollQuestion'),
        ),
        migrations.AddField(
            model_name='poll',
            name='campaign',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.PollCampaign'),
        ),
        migrations.AddField(
            model_name='poll',
            name='portfolio',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='poll',
            name='position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Position'),
        ),
        migrations.AddField(
            model_name='poll',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.AlmaMater'),
        ),
        migrations.AddField(
            model_name='poll',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('price', models.FloatField(default=0)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Contract')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('name_ru', models.CharField(default='', max_length=500, verbose_name='Название')),
                ('name_kk', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('name_en', models.CharField(blank=True, default='', max_length=500, verbose_name='Название')),
                ('sort', models.IntegerField(default=500)),
                ('uid', models.UUIDField(default=uuid.uuid4, verbose_name='UUID')),
                ('attendeePW', models.UUIDField(default=uuid.uuid4, verbose_name='attendeer_PW')),
                ('moderatorPW', models.UUIDField(default=uuid.uuid4, verbose_name='moderatorPW')),
                ('date_begin', models.DateTimeField(blank=True, null=True)),
                ('date_end', models.DateTimeField(blank=True, null=True)),
                ('abuse_count', models.IntegerField(default=0)),
                ('planned_date', models.DateTimeField(null=True)),
                ('server_id', models.IntegerField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.AlmaMater')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ManyComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Poll')),
                (
                'question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.PollQuestion')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KandidatUoVerdiktHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('kandidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Kandidat')),
                ('verdikt',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Verdikt')),
                ('who', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DontHaveRecordRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('dhr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.DontHaveRecord')),
            ],
        ),
        migrations.AddField(
            model_name='donthaverecord',
            name='portfolio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio'),
        ),
        migrations.AddField(
            model_name='donthaverecord',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='criteriazam',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.TeacherStatus'),
        ),
        migrations.AddField(
            model_name='criteriadir',
            name='category',
            field=models.ManyToManyField(to='portfoli.TeacherStatus'),
        ),
        migrations.AddField(
            model_name='criteriadir',
            name='criteria_group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.CriteriaDirGroup'),
        ),
        migrations.AddField(
            model_name='criteriadir',
            name='dest',
            field=models.ManyToManyField(to='portfoli.SchoolTypeGroup'),
        ),
        migrations.AddField(
            model_name='contract',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.AlmaMater'),
        ),
        migrations.CreateModel(
            name='CompetitionVacancyStatement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('place_residence_fact', models.CharField(default='', max_length=255, verbose_name='Location')),
                ('place_residence', models.CharField(default='', max_length=255, verbose_name='Place of registration')),
                ('experience', models.IntegerField(default=0, verbose_name='Experience')),
                ('experience_spec', models.IntegerField(default=0, verbose_name='Professional experience')),
                ('experience_ped', models.IntegerField(default=0, verbose_name='Pedagogical experience')),
                ('experience_this_school',
                 models.IntegerField(default=0, verbose_name='Experience at the current (past) place of work')),
                ('checked', models.BooleanField(default=False)),
                ('not_checked', models.BooleanField(default=False)),
                ('accepted', models.BooleanField(default=False)),
                ('not_accepeted', models.BooleanField(default=False)),
                ('documents', models.ManyToManyField(blank=True, to='portfoli.PrivateDocument')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
                ('vacancy',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.CompetitionVacancy',
                                   verbose_name='Job')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='competitionvacancy',
            name='position',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Position'),
        ),
        migrations.AddField(
            model_name='competitionvacancy',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.AlmaMater'),
        ),
        migrations.AddField(
            model_name='competitionvacancy',
            name='status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.CompetitionVacancyStatus'),
        ),
        migrations.CreateModel(
            name='BadNamePortfolio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('portfolio',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='attperiod',
            name='season',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Season'),
        ),
        migrations.CreateModel(
            name='AttestationResponsible',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('attestation_responsible_region', models.ManyToManyField(blank=True, to='portfoli.Region')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AttestationProtocol1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('text1', models.TextField(default='')),
                ('text2', models.TextField(default='')),
                ('text3', models.TextField(default='')),
                ('file', models.FileField(blank=True, null=True, upload_to='att_prot/')),
                ('uniq', models.CharField(default='', max_length=255)),
                ('attestation', models.ManyToManyField(to='portfoli.TeacherAttestation', verbose_name='Attestation')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AttestationProtocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('file', models.FileField(blank=True, null=True, upload_to='att_prot/')),
                ('attestation', models.ManyToManyField(to='portfoli.TeacherAttestation', verbose_name='Attestation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AspirantResume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('text', models.CharField(max_length=255, verbose_name='Описание')),
                ('category', models.ManyToManyField(blank=True, to='portfoli.TeacherCategory')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
                ('positions', models.ManyToManyField(to='portfoli.Position')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AspirantPrivate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_added')),
                ('date_delete', models.DateField(blank=True, null=True, verbose_name='date_delete')),
                ('comment', models.CharField(blank=True, default='', max_length=1000, verbose_name='Comment')),
                ('exchange', models.BooleanField(default=False)),
                ('text', models.CharField(blank=True, max_length=255, null=True, verbose_name='Описание')),
                ('image', models.ImageField(upload_to='usr/2021-04-05/private_docs/', verbose_name='Изображение')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='almamater',
            name='region',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.Region'),
        ),
        migrations.AddField(
            model_name='analiticquery',
            name='section',
            field=models.ManyToManyField(blank=True, to='portfoli.QuerySection'),
        ),
        migrations.AddField(
            model_name='place',
            name='obl',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.Obl'),
        ),
        migrations.AddField(
            model_name='portfoliostatement',
            name='documents',
            field=models.ManyToManyField(blank=True, to='portfoli.PrivateDocument'),
        ),
        migrations.AddField(
            model_name='studenttable',
            name='dest',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.StudentTableDest'),
        ),
        migrations.AddField(
            model_name='teacherattestation',
            name='evaluation_criteria',
            field=models.ManyToManyField(to='portfoli.PortfolioEvaluationCriteria',
                                         verbose_name='Критерии оценки портфолио'),
        ),
        migrations.AddField(
            model_name='teacherattestation',
            name='region',
            field=models.ManyToManyField(blank=True, to='portfoli.Region'),
        ),
        migrations.AddField(
            model_name='teacherattestation',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.TeacherAttestationTemplate'),
        ),
        migrations.AddField(
            model_name='teacherattestationuser',
            name='expert_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='portfoli.ExpertType'),
        ),
        migrations.AddField(
            model_name='teacherscale',
            name='criteria',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='portfoli.PortfolioEvaluationCriteria'),
        ),
        migrations.CreateModel(
            name='CheckRecordStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pane', models.CharField(blank=True, default='', max_length=50)),
                ('object_id', models.IntegerField(default=0)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfoli.Portfolio')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'pane', 'object_id')},
            },
        ),
        migrations.AddField(
            model_name='klass',
            name='klass_type',
            field=models.IntegerField(default=2),
        ),
        migrations.AddField(
            model_name='dateobjects',
            name='year_number',
            field=models.IntegerField(default=0, unique=True),
        ),
        migrations.AddField(
            model_name='almamater',
            name='has_access_to_ekitaphana',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='dateobjects',
            name='year_number',
            field=models.IntegerField(unique=True),
        ),
        # migrations.AlterField(
        #     model_name='dateobjects',
        #     name='year_number',
        #     field=models.IntegerField(),
        # ),
    ]
